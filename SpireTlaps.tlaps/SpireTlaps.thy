(* automatically generated -- do not edit manually *)
theory SpireTlaps imports Constant Zenon begin
ML_command {* writeln ("*** TLAPS PARSED\n"); *}
consts
  "isReal" :: c
  "isa_slas_a" :: "[c,c] => c"
  "isa_bksl_diva" :: "[c,c] => c"
  "isa_perc_a" :: "[c,c] => c"
  "isa_peri_peri_a" :: "[c,c] => c"
  "isInfinity" :: c
  "isa_lbrk_rbrk_a" :: "[c] => c"
  "isa_less_more_a" :: "[c] => c"

lemma ob'909:
fixes Consenters
fixes Values
fixes Quorums
(* usable definition Rounds suppressed *)
fixes msgs msgs'
fixes lastRound lastRound'
fixes lastVal lastVal'
fixes lastPrimed lastPrimed'
(* usable definition vars suppressed *)
(* usable definition None suppressed *)
(* usable definition Send suppressed *)
(* usable definition TrySend suppressed *)
(* usable definition Answers suppressed *)
(* usable definition QuorumAnswers suppressed *)
(* usable definition SetMax suppressed *)
(* usable definition MaxLastRound suppressed *)
(* usable definition AllIdenticalRounds suppressed *)
(* usable definition AllIdenticalValues suppressed *)
(* usable definition AllPrimed suppressed *)
(* usable definition PickValue suppressed *)
(* usable definition PickRound suppressed *)
(* usable definition SuccessorValues suppressed *)
(* usable definition Init suppressed *)
(* usable definition Answer suppressed *)
(* usable definition Decided suppressed *)
(* usable definition Terminated suppressed *)
(* usable definition Spec suppressed *)
(* usable definition Messages suppressed *)
(* usable definition TypeOK suppressed *)
(* usable definition Chosen suppressed *)
(* usable definition Consistency suppressed *)
(* usable definition MsgInv suppressed *)
(* usable definition NatInductiveDefHypothesis suppressed *)
(* usable definition NatInductiveDefConclusion suppressed *)
(* usable definition FiniteNatInductiveDefHypothesis suppressed *)
(* usable definition FiniteNatInductiveDefConclusion suppressed *)
(* usable definition IsFiniteSet suppressed *)
(* usable definition Cardinality suppressed *)
(* usable definition Restrict suppressed *)
(* usable definition Range suppressed *)
(* usable definition Inverse suppressed *)
(* usable definition Injection suppressed *)
(* usable definition Surjection suppressed *)
(* usable definition Bijection suppressed *)
(* usable definition ExistsInjection suppressed *)
(* usable definition ExistsSurjection suppressed *)
(* usable definition ExistsBijection suppressed *)
(* usable definition IsTransitivelyClosedOn suppressed *)
(* usable definition IsWellFoundedOn suppressed *)
(* usable definition SetLessThan suppressed *)
(* usable definition WFDefOn suppressed *)
(* usable definition OpDefinesFcn suppressed *)
(* usable definition WFInductiveDefines suppressed *)
(* usable definition WFInductiveUnique suppressed *)
(* usable definition TransitiveClosureOn suppressed *)
(* usable definition OpToRel suppressed *)
(* usable definition PreImage suppressed *)
(* usable definition LexPairOrdering suppressed *)
(* usable definition LexProductOrdering suppressed *)
(* usable definition FiniteSubsetsOf suppressed *)
(* usable definition StrictSubsetOrdering suppressed *)
(* usable definition HasMax suppressed *)
(* usable definition ChosenIn suppressed *)
(* usable definition NotOfferedIn suppressed *)
(* usable definition OfferedIn suppressed *)
(* usable definition AnsweredIn suppressed *)
assumes v'162: "((((msgs) \<in> ((SUBSET (Messages))))) & (MsgInv) & (((lastVal) \<in> ([(Consenters) \<rightarrow> (((Values) \<union> ({(None)})))]))) & (((lastRound) \<in> ([(Consenters) \<rightarrow> (((Rounds) \<union> ({((minus (((Succ[0])))))})))]))) & (((lastPrimed) \<in> ([(Consenters) \<rightarrow> (BOOLEAN)]))) & (\<forall> a_ca \<in> (Consenters) : ((((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Leftrightarrow> (((fapply ((lastVal), (a_ca))) = (None))))) & (((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Rightarrow> ((~ (fapply ((lastPrimed), (a_ca))))))) & (((((fapply ((lastRound), (a_ca))) \<noteq> ((minus (((Succ[0]))))))) \<Rightarrow> (\<exists> m \<in> (msgs) : ((((fapply ((m), (''type''))) = (''Answer''))) & (((fapply ((m), (''cons''))) = (a_ca))) & (((fapply ((m), (''lastRound''))) = (fapply ((lastRound), (a_ca))))) & (((fapply ((m), (''lastVal''))) = (fapply ((lastVal), (a_ca))))) & (((fapply ((m), (''lastPrimed''))) = (fapply ((lastPrimed), (a_ca))))))))) & ((~ (\<exists> m \<in> (msgs) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply ((lastRound), (a_ca))))))))))) & (\<forall> a_m1a \<in> (msgs) : (\<forall> a_m2a \<in> (msgs) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a))))))))))"
assumes v'163: "((((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))))) | (\<exists> v \<in> (Values) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))))))) & (((((a_lastRoundhash_primea :: c)) = (lastRound))) & ((((a_lastValhash_primea :: c)) = (lastVal))) & ((((a_lastPrimedhash_primea :: c)) = (lastPrimed))))) | (\<exists> a_ca \<in> (Consenters) : ((Answer ((a_ca))))) | (Decided) | (Terminated))"
fixes a_ca
assumes a_ca_in : "(a_ca \<in> (Consenters))"
assumes v'186: "((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))))) | (\<exists> v \<in> (Values) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE)))))))))"
assumes v'187: "((((a_lastRoundhash_primea :: c)) = (lastRound)))"
assumes v'188: "((((a_lastValhash_primea :: c)) = (lastVal)))"
assumes v'189: "((((a_lastPrimedhash_primea :: c)) = (lastPrimed)))"
assumes v'190: "((\<And> Q :: c. Q \<in> (Quorums) \<Longrightarrow> (\<And> A :: c. A \<in> ((QuorumAnswers ((Q)))) \<Longrightarrow> ((cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))) \<Longrightarrow> ((~ (\<exists> m \<in> ((a_msgshash_primea :: c)) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply (((a_lastRoundhash_primea :: c)), (a_ca)))))))))))))))"
assumes v'191: "((\<And> v :: c. v \<in> (Values) \<Longrightarrow> (((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))))) \<Longrightarrow> ((~ (\<exists> m \<in> ((a_msgshash_primea :: c)) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply (((a_lastRoundhash_primea :: c)), (a_ca))))))))))))))"
shows "((~ (\<exists> m \<in> ((a_msgshash_primea :: c)) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply (((a_lastRoundhash_primea :: c)), (a_ca)))))))))))"(is "PROP ?ob'909")
proof -
ML_command {* writeln "*** TLAPS ENTER 909"; *}
show "PROP ?ob'909"

(* BEGIN ZENON INPUT
;; file=SpireTlaps.tlaps/tlapm_7d0e6d.znn; PATH='/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/lib/tlaps/bin'; zenon -p0 -x tla -oisar -max-time 1d "$file" >SpireTlaps.tlaps/tlapm_7d0e6d.znn.out
;; obligation #909
$hyp "v'162" (/\ (TLA.in msgs (TLA.SUBSET Messages)) MsgInv (TLA.in lastVal
(TLA.FuncSet Consenters (TLA.cup Values (TLA.set None)))) (TLA.in lastRound
(TLA.FuncSet Consenters (TLA.cup Rounds
(TLA.set (arith.minus (TLA.fapply TLA.Succ 0)))))) (TLA.in lastPrimed
(TLA.FuncSet Consenters (TLA.set T. F.)))
(TLA.bAll Consenters ((a_ca) (/\ (<=> (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))) (= (TLA.fapply lastVal a_ca) None))
(=> (= (TLA.fapply lastRound a_ca) (arith.minus (TLA.fapply TLA.Succ 0)))
(-. (TLA.fapply lastPrimed a_ca))) (=> (-. (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))))
(TLA.bEx msgs ((m) (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca) (= (TLA.fapply m "lastRound")
(TLA.fapply lastRound a_ca)) (= (TLA.fapply m "lastVal")
(TLA.fapply lastVal a_ca)) (= (TLA.fapply m "lastPrimed")
(TLA.fapply lastPrimed a_ca))))))
(-. (TLA.bEx msgs ((m) (/\ (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca)) (arith.lt (TLA.fapply lastRound a_ca)
(TLA.fapply m "lastRound"))))))
(TLA.bAll msgs ((a_m1a) (TLA.bAll msgs ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a))))))))))
$hyp "v'163" (\/ (/\ (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)))))))))
(TLA.bEx Values ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)))))
(/\ (= a_lastRoundhash_primea lastRound) (= a_lastValhash_primea lastVal)
(= a_lastPrimedhash_primea lastPrimed)))
(TLA.bEx Consenters ((a_ca) (Answer a_ca))) Decided
Terminated)
$hyp "a_ca_in" (TLA.in a_ca Consenters)
$hyp "v'186" (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)))))))))
(TLA.bEx Values ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)))))
$hyp "v'187" (= a_lastRoundhash_primea
lastRound)
$hyp "v'188" (= a_lastValhash_primea
lastVal)
$hyp "v'189" (= a_lastPrimedhash_primea
lastPrimed)
$hyp "v'190" (TLA.bAll Quorums ((Q) (TLA.bAll (QuorumAnswers Q) ((A) (=> (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))) (-. (TLA.bEx a_msgshash_primea ((m) (/\ (/\ (= (TLA.fapply m "type")
"Answer") (= (TLA.fapply m "cons") a_ca))
(arith.lt (TLA.fapply a_lastRoundhash_primea a_ca)
(TLA.fapply m "lastRound")))))))))))
$hyp "v'191" (TLA.bAll Values ((v) (=> (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)) (-. (TLA.bEx a_msgshash_primea ((m) (/\ (/\ (= (TLA.fapply m "type")
"Answer") (= (TLA.fapply m "cons") a_ca))
(arith.lt (TLA.fapply a_lastRoundhash_primea a_ca)
(TLA.fapply m "lastRound")))))))))
$goal (-. (TLA.bEx a_msgshash_primea ((m) (/\ (/\ (= (TLA.fapply m "type")
"Answer") (= (TLA.fapply m "cons") a_ca))
(arith.lt (TLA.fapply a_lastRoundhash_primea a_ca)
(TLA.fapply m "lastRound"))))))
END ZENON  INPUT *)
(* PROOF-FOUND *)
(* BEGIN-PROOF *)
proof (rule zenon_nnpp)
 have z_Hh:"bAll(Quorums, (\<lambda>Q. bAll(QuorumAnswers(Q), (\<lambda>A. (cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))=>(~bEx(a_msgshash_primea, (\<lambda>m. ((((m[''type''])=''Answer'')&((m[''cons''])=a_ca))&((a_lastRoundhash_primea[a_ca]) < (m[''lastRound''])))))))))))" (is "?z_hh")
 using v'190 by blast
 have z_Hd:"(bEx(Quorums, (\<lambda>Q. bEx(QuorumAnswers(Q), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))|bEx(Values, (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "?z_hct|?z_hcx")
 using v'186 by blast
 have z_Hi:"bAll(Values, (\<lambda>v. (TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))=>(~bEx(a_msgshash_primea, (\<lambda>m. ((((m[''type''])=''Answer'')&((m[''cons''])=a_ca))&((a_lastRoundhash_primea[a_ca]) < (m[''lastRound''])))))))))" (is "?z_hi")
 using v'191 by blast
 assume z_Hj:"(~(~bEx(a_msgshash_primea, (\<lambda>m. ((((m[''type''])=''Answer'')&((m[''cons''])=a_ca))&((a_lastRoundhash_primea[a_ca]) < (m[''lastRound''])))))))" (is "~~?z_hcb")
 have z_Hdf_z_Hh: "(\\A x:((x \\in Quorums)=>bAll(QuorumAnswers(x), (\<lambda>A. (cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))=>(~?z_hcb)))))) == ?z_hh" (is "?z_hdf == _")
 by (unfold bAll_def)
 have z_Hdf: "?z_hdf" (is "\\A x : ?z_hdl(x)")
 by (unfold z_Hdf_z_Hh, fact z_Hh)
 have z_Hdm_z_Hi: "(\\A x:((x \\in Values)=>(TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))=>(~?z_hcb)))) == ?z_hi" (is "?z_hdm == _")
 by (unfold bAll_def)
 have z_Hdm: "?z_hdm" (is "\\A x : ?z_hds(x)")
 by (unfold z_Hdm_z_Hi, fact z_Hi)
 have z_Hcb: "?z_hcb"
 by (rule zenon_notnot_0 [OF z_Hj])
 show FALSE
 proof (rule zenon_or [OF z_Hd])
  assume z_Hct:"?z_hct"
  have z_Hdt_z_Hct: "(\\E x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))) == ?z_hct" (is "?z_hdt == _")
  by (unfold bEx_def)
  have z_Hdt: "?z_hdt" (is "\\E x : ?z_hdw(x)")
  by (unfold z_Hdt_z_Hct, fact z_Hct)
  have z_Hdx: "?z_hdw((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))))" (is "?z_hdz&?z_hea")
  by (rule zenon_ex_choose_0 [of "?z_hdw", OF z_Hdt])
  have z_Hdz: "?z_hdz"
  by (rule zenon_and_0 [OF z_Hdx])
  have z_Hea: "?z_hea"
  by (rule zenon_and_1 [OF z_Hdx])
  have z_Heb_z_Hea: "(\\E x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))) == ?z_hea" (is "?z_heb == _")
  by (unfold bEx_def)
  have z_Heb: "?z_heb" (is "\\E x : ?z_hfd(x)")
  by (unfold z_Heb_z_Hea, fact z_Hea)
  have z_Hfe: "?z_hfd((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))))" (is "?z_hfg&?z_hfh")
  by (rule zenon_ex_choose_0 [of "?z_hfd", OF z_Heb])
  have z_Hfg: "?z_hfg"
  by (rule zenon_and_0 [OF z_Hfe])
  have z_Hfh: "?z_hfh"
  by (rule zenon_and_1 [OF z_Hfe])
  have z_Hfi: "?z_hdl((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))))" (is "_=>?z_hfj")
  by (rule zenon_all_0 [of "?z_hdl" "(CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))", OF z_Hdf])
  show FALSE
  proof (rule zenon_imply [OF z_Hfi])
   assume z_Hfk:"(~?z_hdz)"
   show FALSE
   by (rule notE [OF z_Hfk z_Hdz])
  next
   assume z_Hfj:"?z_hfj"
   have z_Hfl_z_Hfj: "(\\A x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))=>(cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))))))=>(~?z_hcb)))) == ?z_hfj" (is "?z_hfl == _")
   by (unfold bAll_def)
   have z_Hfl: "?z_hfl" (is "\\A x : ?z_hfo(x)")
   by (unfold z_Hfl_z_Hfj, fact z_Hfj)
   have z_Hfp: "?z_hfo((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))))" (is "_=>?z_hfq")
   by (rule zenon_all_0 [of "?z_hfo" "(CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))))))))", OF z_Hfl])
   show FALSE
   proof (rule zenon_imply [OF z_Hfp])
    assume z_Hfr:"(~?z_hfg)"
    show FALSE
    by (rule notE [OF z_Hfr z_Hfg])
   next
    assume z_Hfq:"?z_hfq" (is "_=>?z_hca")
    show FALSE
    proof (rule zenon_imply [OF z_Hfq])
     assume z_Hfs:"(~?z_hfh)"
     show FALSE
     by (rule notE [OF z_Hfs z_Hfh])
    next
     assume z_Hca:"?z_hca"
     show FALSE
     by (rule notE [OF z_Hca z_Hcb])
    qed
   qed
  qed
 next
  assume z_Hcx:"?z_hcx"
  have z_Hft_z_Hcx: "(\\E x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))) == ?z_hcx" (is "?z_hft == _")
  by (unfold bEx_def)
  have z_Hft: "?z_hft" (is "\\E x : ?z_hfv(x)")
  by (unfold z_Hft_z_Hcx, fact z_Hcx)
  have z_Hfw: "?z_hfv((CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "?z_hfy&?z_hfz")
  by (rule zenon_ex_choose_0 [of "?z_hfv", OF z_Hft])
  have z_Hfy: "?z_hfy"
  by (rule zenon_and_0 [OF z_Hfw])
  have z_Hfz: "?z_hfz"
  by (rule zenon_and_1 [OF z_Hfw])
  have z_Hga: "?z_hds((CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "_=>?z_hgb")
  by (rule zenon_all_0 [of "?z_hds" "(CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))))", OF z_Hdm])
  show FALSE
  proof (rule zenon_imply [OF z_Hga])
   assume z_Hgc:"(~?z_hfy)"
   show FALSE
   by (rule notE [OF z_Hgc z_Hfy])
  next
   assume z_Hgb:"?z_hgb" (is "_=>?z_hca")
   show FALSE
   proof (rule zenon_imply [OF z_Hgb])
    assume z_Hgd:"(~?z_hfz)"
    show FALSE
    by (rule notE [OF z_Hgd z_Hfz])
   next
    assume z_Hca:"?z_hca"
    show FALSE
    by (rule notE [OF z_Hca z_Hcb])
   qed
  qed
 qed
qed
(* END-PROOF *)
ML_command {* writeln "*** TLAPS EXIT 909"; *} qed
lemma ob'907:
fixes Consenters
fixes Values
fixes Quorums
(* usable definition Rounds suppressed *)
fixes msgs msgs'
fixes lastRound lastRound'
fixes lastVal lastVal'
fixes lastPrimed lastPrimed'
(* usable definition vars suppressed *)
(* usable definition None suppressed *)
(* usable definition Answers suppressed *)
(* usable definition QuorumAnswers suppressed *)
(* usable definition SetMax suppressed *)
(* usable definition MaxLastRound suppressed *)
(* usable definition AllIdenticalRounds suppressed *)
(* usable definition AllIdenticalValues suppressed *)
(* usable definition AllPrimed suppressed *)
(* usable definition PickValue suppressed *)
(* usable definition PickRound suppressed *)
(* usable definition SuccessorValues suppressed *)
(* usable definition Init suppressed *)
(* usable definition Answer suppressed *)
(* usable definition Decided suppressed *)
(* usable definition Terminated suppressed *)
(* usable definition Spec suppressed *)
(* usable definition Messages suppressed *)
(* usable definition TypeOK suppressed *)
(* usable definition Chosen suppressed *)
(* usable definition Consistency suppressed *)
(* usable definition MsgInv suppressed *)
(* usable definition NatInductiveDefHypothesis suppressed *)
(* usable definition NatInductiveDefConclusion suppressed *)
(* usable definition FiniteNatInductiveDefHypothesis suppressed *)
(* usable definition FiniteNatInductiveDefConclusion suppressed *)
(* usable definition IsFiniteSet suppressed *)
(* usable definition Cardinality suppressed *)
(* usable definition Restrict suppressed *)
(* usable definition Range suppressed *)
(* usable definition Inverse suppressed *)
(* usable definition Injection suppressed *)
(* usable definition Surjection suppressed *)
(* usable definition Bijection suppressed *)
(* usable definition ExistsInjection suppressed *)
(* usable definition ExistsSurjection suppressed *)
(* usable definition ExistsBijection suppressed *)
(* usable definition IsTransitivelyClosedOn suppressed *)
(* usable definition IsWellFoundedOn suppressed *)
(* usable definition SetLessThan suppressed *)
(* usable definition WFDefOn suppressed *)
(* usable definition OpDefinesFcn suppressed *)
(* usable definition WFInductiveDefines suppressed *)
(* usable definition WFInductiveUnique suppressed *)
(* usable definition TransitiveClosureOn suppressed *)
(* usable definition OpToRel suppressed *)
(* usable definition PreImage suppressed *)
(* usable definition LexPairOrdering suppressed *)
(* usable definition LexProductOrdering suppressed *)
(* usable definition FiniteSubsetsOf suppressed *)
(* usable definition StrictSubsetOrdering suppressed *)
(* usable definition HasMax suppressed *)
(* usable definition ChosenIn suppressed *)
(* usable definition NotOfferedIn suppressed *)
(* usable definition OfferedIn suppressed *)
(* usable definition AnsweredIn suppressed *)
assumes v'160: "((((msgs) \<in> ((SUBSET (Messages))))) & (MsgInv) & (((lastVal) \<in> ([(Consenters) \<rightarrow> (((Values) \<union> ({(None)})))]))) & (((lastRound) \<in> ([(Consenters) \<rightarrow> (((Rounds) \<union> ({((minus (((Succ[0])))))})))]))) & (((lastPrimed) \<in> ([(Consenters) \<rightarrow> (BOOLEAN)]))) & (\<forall> a_ca \<in> (Consenters) : ((((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Leftrightarrow> (((fapply ((lastVal), (a_ca))) = (None))))) & (((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Rightarrow> ((~ (fapply ((lastPrimed), (a_ca))))))) & (((((fapply ((lastRound), (a_ca))) \<noteq> ((minus (((Succ[0]))))))) \<Rightarrow> (\<exists> m \<in> (msgs) : ((((fapply ((m), (''type''))) = (''Answer''))) & (((fapply ((m), (''cons''))) = (a_ca))) & (((fapply ((m), (''lastRound''))) = (fapply ((lastRound), (a_ca))))) & (((fapply ((m), (''lastVal''))) = (fapply ((lastVal), (a_ca))))) & (((fapply ((m), (''lastPrimed''))) = (fapply ((lastPrimed), (a_ca))))))))) & ((~ (\<exists> m \<in> (msgs) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply ((lastRound), (a_ca))))))))))) & (\<forall> a_m1a \<in> (msgs) : (\<forall> a_m2a \<in> (msgs) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a))))))))))"
assumes v'161: "((((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (((((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE))))})))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))}))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE))))})))))))))))) | (\<exists> v \<in> (Values) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))}))))))))) & (((((a_lastRoundhash_primea :: c)) = (lastRound))) & ((((a_lastValhash_primea :: c)) = (lastVal))) & ((((a_lastPrimedhash_primea :: c)) = (lastPrimed))))) | (\<exists> a_ca \<in> (Consenters) : ((Answer ((a_ca))))) | (Decided) | (Terminated))"
fixes a_ca
assumes a_ca_in : "(a_ca \<in> (Consenters))"
assumes v'181: "((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (((((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE))))})))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))}))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE))))})))))))))))) | (\<exists> v \<in> (Values) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))})))))))))"
assumes v'182: "((((a_lastRoundhash_primea :: c)) = (lastRound)))"
assumes v'183: "((((a_lastValhash_primea :: c)) = (lastVal)))"
assumes v'184: "((((a_lastPrimedhash_primea :: c)) = (lastPrimed)))"
shows "(((((fapply (((a_lastRoundhash_primea :: c)), (a_ca))) \<noteq> ((minus (((Succ[0]))))))) \<Rightarrow> (\<exists> m \<in> ((a_msgshash_primea :: c)) : ((((fapply ((m), (''type''))) = (''Answer''))) & (((fapply ((m), (''cons''))) = (a_ca))) & (((fapply ((m), (''lastRound''))) = (fapply (((a_lastRoundhash_primea :: c)), (a_ca))))) & (((fapply ((m), (''lastVal''))) = (fapply (((a_lastValhash_primea :: c)), (a_ca))))) & (((fapply ((m), (''lastPrimed''))) = (fapply (((a_lastPrimedhash_primea :: c)), (a_ca)))))))))"(is "PROP ?ob'907")
proof -
ML_command {* writeln "*** TLAPS ENTER 907"; *}
show "PROP ?ob'907"

(* BEGIN ZENON INPUT
;; file=SpireTlaps.tlaps/tlapm_282958.znn; PATH='/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/lib/tlaps/bin'; zenon -p0 -x tla -oisar -max-time 1d "$file" >SpireTlaps.tlaps/tlapm_282958.znn.out
;; obligation #907
$hyp "v'160" (/\ (TLA.in msgs (TLA.SUBSET Messages)) MsgInv (TLA.in lastVal
(TLA.FuncSet Consenters (TLA.cup Values (TLA.set None)))) (TLA.in lastRound
(TLA.FuncSet Consenters (TLA.cup Rounds
(TLA.set (arith.minus (TLA.fapply TLA.Succ 0)))))) (TLA.in lastPrimed
(TLA.FuncSet Consenters (TLA.set T. F.)))
(TLA.bAll Consenters ((a_ca) (/\ (<=> (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))) (= (TLA.fapply lastVal a_ca) None))
(=> (= (TLA.fapply lastRound a_ca) (arith.minus (TLA.fapply TLA.Succ 0)))
(-. (TLA.fapply lastPrimed a_ca))) (=> (-. (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))))
(TLA.bEx msgs ((m) (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca) (= (TLA.fapply m "lastRound")
(TLA.fapply lastRound a_ca)) (= (TLA.fapply m "lastVal")
(TLA.fapply lastVal a_ca)) (= (TLA.fapply m "lastPrimed")
(TLA.fapply lastPrimed a_ca))))))
(-. (TLA.bEx msgs ((m) (/\ (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca)) (arith.lt (TLA.fapply lastRound a_ca)
(TLA.fapply m "lastRound"))))))
(TLA.bAll msgs ((a_m1a) (TLA.bAll msgs ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a))))))))))
$hyp "v'161" (\/ (/\ (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(/\ (-. (TLA.in (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.)))))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.)))))))))) (TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))))))))))
(TLA.bEx Values ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.))))))))
(/\ (= a_lastRoundhash_primea lastRound) (= a_lastValhash_primea lastVal)
(= a_lastPrimedhash_primea lastPrimed)))
(TLA.bEx Consenters ((a_ca) (Answer a_ca))) Decided
Terminated)
$hyp "a_ca_in" (TLA.in a_ca Consenters)
$hyp "v'181" (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(/\ (-. (TLA.in (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.)))))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.)))))))))) (TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))))))))))
(TLA.bEx Values ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.))))))))
$hyp "v'182" (= a_lastRoundhash_primea
lastRound)
$hyp "v'183" (= a_lastValhash_primea
lastVal)
$hyp "v'184" (= a_lastPrimedhash_primea
lastPrimed)
$goal (=> (-. (= (TLA.fapply a_lastRoundhash_primea a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))))
(TLA.bEx a_msgshash_primea ((m) (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca) (= (TLA.fapply m "lastRound")
(TLA.fapply a_lastRoundhash_primea a_ca)) (= (TLA.fapply m "lastVal")
(TLA.fapply a_lastValhash_primea a_ca)) (= (TLA.fapply m "lastPrimed")
(TLA.fapply a_lastPrimedhash_primea a_ca))))))
END ZENON  INPUT *)
(* PROOF-FOUND *)
(* BEGIN-PROOF *)
proof (rule zenon_nnpp)
 have z_Ha:"((msgs \\in SUBSET(Messages))&(MsgInv&((lastVal \\in FuncSet(Consenters, (Values \\cup {None})))&((lastRound \\in FuncSet(Consenters, (Rounds \\cup { -.(1)})))&((lastPrimed \\in FuncSet(Consenters, {TRUE, FALSE}))&bAll(Consenters, (\<lambda>a_ca. ((((lastRound[a_ca])= -.(1))<=>((lastVal[a_ca])=None))&((((lastRound[a_ca])= -.(1))=>(~(lastPrimed[a_ca])))&((((lastRound[a_ca])~= -.(1))=>bEx(msgs, (\<lambda>m. (((m[''type''])=''Answer'')&(((m[''cons''])=a_ca)&(((m[''lastRound''])=(lastRound[a_ca]))&(((m[''lastVal''])=(lastVal[a_ca]))&((m[''lastPrimed''])=(lastPrimed[a_ca])))))))))&((~bEx(msgs, (\<lambda>m. ((((m[''type''])=''Answer'')&((m[''cons''])=a_ca))&((lastRound[a_ca]) < (m[''lastRound'']))))))&bAll(msgs, (\<lambda>a_m1a. bAll(msgs, (\<lambda>a_m2a. (((((((a_m1a[''type''])=''Answer'')&((a_m2a[''type''])=''Answer''))&((a_m1a[''cons''])=a_ca))&((a_m2a[''cons''])=a_ca))&((a_m1a[''lastRound''])=(a_m2a[''lastRound''])))=>(a_m1a=a_m2a)))))))))))))))))" (is "?z_hi&?z_hm")
 using v'160 by blast
 have z_Hf:"(a_lastValhash_primea=lastVal)"
 using v'183 by blast
 have z_Hg:"(a_lastPrimedhash_primea=lastPrimed)"
 using v'184 by blast
 have z_He:"(a_lastRoundhash_primea=lastRound)"
 using v'182 by blast
 have z_Hc:"(a_ca \\in Consenters)" (is "?z_hc")
 using a_ca_in by blast
 have z_Hd:"(bEx(Quorums, (\<lambda>Q. bEx(QuorumAnswers(Q), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))|bEx(Values, (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))}))))))" (is "?z_heh|?z_hgi")
 using v'181 by blast
 have zenon_L1_: "(a_lastRoundhash_primea=lastRound) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastRound''])~=(a_lastRoundhash_primea[a_ca])) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastRound''])=(lastRound[a_ca])) ==> FALSE" (is "?z_he ==> ?z_hgs ==> ?z_hhn ==> FALSE")
 proof -
  assume z_He:"?z_he"
  assume z_Hgs:"?z_hgs" (is "?z_hgt~=?z_hhm")
  assume z_Hhn:"?z_hhn" (is "_=?z_hbs")
  have z_Hho: "(?z_hgt~=?z_hbs)"
  by (rule subst [where P="(\<lambda>zenon_Vqzb. (?z_hgt~=(zenon_Vqzb[a_ca])))", OF z_He z_Hgs])
  show FALSE
  by (rule notE [OF z_Hho z_Hhn])
 qed
 have zenon_L2_: "(a_lastValhash_primea=lastVal) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastVal''])~=(a_lastValhash_primea[a_ca])) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastVal''])=(lastVal[a_ca])) ==> FALSE" (is "?z_hf ==> ?z_hht ==> ?z_hhw ==> FALSE")
 proof -
  assume z_Hf:"?z_hf"
  assume z_Hht:"?z_hht" (is "?z_hhu~=?z_hhv")
  assume z_Hhw:"?z_hhw" (is "_=?z_hbv")
  have z_Hhx: "(?z_hhu~=?z_hbv)"
  by (rule subst [where P="(\<lambda>zenon_Vpzb. (?z_hhu~=(zenon_Vpzb[a_ca])))", OF z_Hf z_Hht])
  show FALSE
  by (rule notE [OF z_Hhx z_Hhw])
 qed
 have zenon_L3_: "(a_lastPrimedhash_primea=lastPrimed) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastPrimed''])~=(a_lastPrimedhash_primea[a_ca])) ==> (((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=(lastRound[a_ca]))&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca]))))))))[''lastPrimed''])=(lastPrimed[a_ca])) ==> FALSE" (is "?z_hg ==> ?z_hic ==> ?z_hif ==> FALSE")
 proof -
  assume z_Hg:"?z_hg"
  assume z_Hic:"?z_hic" (is "?z_hid~=?z_hie")
  assume z_Hif:"?z_hif" (is "_=?z_hbz")
  have z_Hig: "(?z_hid~=?z_hbz)"
  by (rule subst [where P="(\<lambda>zenon_Vizb. (?z_hid~=(zenon_Vizb[a_ca])))", OF z_Hg z_Hic])
  show FALSE
  by (rule notE [OF z_Hig z_Hif])
 qed
 assume z_Hh:"(~(((a_lastRoundhash_primea[a_ca])~= -.(1))=>bEx(a_msgshash_primea, (\<lambda>m. (((m[''type''])=''Answer'')&(((m[''cons''])=a_ca)&(((m[''lastRound''])=(a_lastRoundhash_primea[a_ca]))&(((m[''lastVal''])=(a_lastValhash_primea[a_ca]))&((m[''lastPrimed''])=(a_lastPrimedhash_primea[a_ca]))))))))))" (is "~(?z_him=>?z_hin)")
 have z_Hm: "?z_hm" (is "_&?z_ho")
 by (rule zenon_and_1 [OF z_Ha])
 have z_Ho: "?z_ho" (is "?z_hp&?z_hx")
 by (rule zenon_and_1 [OF z_Hm])
 have z_Hx: "?z_hx" (is "?z_hy&?z_hbg")
 by (rule zenon_and_1 [OF z_Ho])
 have z_Hbg: "?z_hbg" (is "?z_hbh&?z_hbn")
 by (rule zenon_and_1 [OF z_Hx])
 have z_Hbn: "?z_hbn"
 by (rule zenon_and_1 [OF z_Hbg])
 have z_Hiw_z_Hbn: "(\\A x:((x \\in Consenters)=>((((lastRound[x])= -.(1))<=>((lastVal[x])=None))&((((lastRound[x])= -.(1))=>(~(lastPrimed[x])))&((((lastRound[x])~= -.(1))=>bEx(msgs, (\<lambda>m. (((m[''type''])=''Answer'')&(((m[''cons''])=x)&(((m[''lastRound''])=(lastRound[x]))&(((m[''lastVal''])=(lastVal[x]))&((m[''lastPrimed''])=(lastPrimed[x])))))))))&((~bEx(msgs, (\<lambda>m. ((((m[''type''])=''Answer'')&((m[''cons''])=x))&((lastRound[x]) < (m[''lastRound'']))))))&bAll(msgs, (\<lambda>a_m1a. bAll(msgs, (\<lambda>a_m2a. (((((((a_m1a[''type''])=''Answer'')&((a_m2a[''type''])=''Answer''))&((a_m1a[''cons''])=x))&((a_m2a[''cons''])=x))&((a_m1a[''lastRound''])=(a_m2a[''lastRound''])))=>(a_m1a=a_m2a)))))))))))) == ?z_hbn" (is "?z_hiw == _")
 by (unfold bAll_def)
 have z_Hiw: "?z_hiw" (is "\\A x : ?z_hkn(x)")
 by (unfold z_Hiw_z_Hbn, fact z_Hbn)
 have z_Him: "?z_him" (is "?z_hhm~=?z_hbe")
 by (rule zenon_notimply_0 [OF z_Hh])
 have z_Hko: "(~?z_hin)"
 by (rule zenon_notimply_1 [OF z_Hh])
 have z_Hkp_z_Hko: "(~(\\E x:((x \\in a_msgshash_primea)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hhm)&(((x[''lastVal''])=(a_lastValhash_primea[a_ca]))&((x[''lastPrimed''])=(a_lastPrimedhash_primea[a_ca]))))))))) == (~?z_hin)" (is "?z_hkp == ?z_hko")
 by (unfold bEx_def)
 have z_Hkp: "?z_hkp" (is "~(\\E x : ?z_hla(x))")
 by (unfold z_Hkp_z_Hko, fact z_Hko)
 show FALSE
 proof (rule zenon_or [OF z_Hd])
  assume z_Heh:"?z_heh"
  have z_Hlb_z_Heh: "(\\E x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))))))) == ?z_heh" (is "?z_hlb == _")
  by (unfold bEx_def)
  have z_Hlb: "?z_hlb" (is "\\E x : ?z_hlg(x)")
  by (unfold z_Hlb_z_Heh, fact z_Heh)
  have z_Hlh: "?z_hlg((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))))))))" (is "?z_hlj&?z_hlk")
  by (rule zenon_ex_choose_0 [of "?z_hlg", OF z_Hlb])
  have z_Hlk: "?z_hlk"
  by (rule zenon_and_1 [OF z_Hlh])
  have z_Hll_z_Hlk: "(\\E x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))) == ?z_hlk" (is "?z_hll == _")
  by (unfold bEx_def)
  have z_Hll: "?z_hll" (is "\\E x : ?z_hnc(x)")
  by (unfold z_Hll_z_Hlk, fact z_Hlk)
  have z_Hnd: "?z_hnc((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" (is "?z_hnf&?z_hng")
  by (rule zenon_ex_choose_0 [of "?z_hnc", OF z_Hll])
  have z_Hng: "?z_hng"
  by (rule zenon_and_1 [OF z_Hnd])
  have z_Hcc: "((lastRound[a_ca])~=?z_hbe)" (is "?z_hbs~=_")
  by (rule subst [where P="(\<lambda>zenon_Vtzb. ((zenon_Vtzb[a_ca])~=?z_hbe))", OF z_He z_Him])
  show FALSE
  proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vcv. zenon_Vcv)" "AllIdenticalRounds((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" "cond(AllPrimed((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), FALSE, cond(AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))))))" "bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))})))))", OF z_Hng])
   assume z_Hnn:"AllIdenticalRounds((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" (is "?z_hnn")
   assume z_Hno:"cond(AllPrimed((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), FALSE, cond(AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))))))" (is "?z_hno")
   show FALSE
   proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vcv. zenon_Vcv)" "AllPrimed((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" "FALSE" "cond(AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))})))))))", OF z_Hno])
    assume z_Hnp:"AllPrimed((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" (is "?z_hnp")
    assume z_Hbm:"FALSE" (is "?z_hbm")
    show FALSE
    by (rule z_Hbm)
   next
    assume z_Hoz:"(~AllPrimed((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))" (is "~?z_hnp")
    assume z_Hnq:"cond(AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))})))))))" (is "?z_hnq")
    show FALSE
    proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vcv. zenon_Vcv)" "AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" "(((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))}))))" "(((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))))", OF z_Hnq])
     assume z_Hnr:"AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))" (is "?z_hnr")
     assume z_Hns:"(((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))}))))" (is "?z_hnt&?z_hnw")
     have z_Hnw: "?z_hnw" (is "?z_hnx&?z_hob")
     by (rule zenon_and_1 [OF z_Hns])
     have z_Hob: "?z_hob" (is "_=?z_hoc")
     by (rule zenon_and_1 [OF z_Hnw])
     have z_Hpa: "?z_hkn(a_ca)" (is "_=>?z_hbp")
     by (rule zenon_all_0 [of "?z_hkn" "a_ca", OF z_Hiw])
     show FALSE
     proof (rule zenon_imply [OF z_Hpa])
      assume z_Hpb:"(~?z_hc)"
      show FALSE
      by (rule notE [OF z_Hpb z_Hc])
     next
      assume z_Hbp:"?z_hbp" (is "?z_hbq&?z_hbw")
      have z_Hbw: "?z_hbw" (is "?z_hbx&?z_hca")
      by (rule zenon_and_1 [OF z_Hbp])
      have z_Hca: "?z_hca" (is "?z_hcb&?z_hda")
      by (rule zenon_and_1 [OF z_Hbw])
      have z_Hcb: "?z_hcb" (is "?z_hcc=>?z_hcd")
      by (rule zenon_and_0 [OF z_Hca])
      show FALSE
      proof (rule zenon_imply [OF z_Hcb])
       assume z_Hpc:"(~?z_hcc)" (is "~~?z_hbr")
       show FALSE
       by (rule notE [OF z_Hpc z_Hcc])
      next
       assume z_Hcd:"?z_hcd"
       have z_Hpd_z_Hcd: "(\\E x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))) == ?z_hcd" (is "?z_hpd == _")
       by (unfold bEx_def)
       have z_Hpd: "?z_hpd" (is "\\E x : ?z_hpe(x)")
       by (unfold z_Hpd_z_Hcd, fact z_Hcd)
       have z_Hpf: "?z_hpe((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))))" (is "?z_hpg&?z_hph")
       by (rule zenon_ex_choose_0 [of "?z_hpe", OF z_Hpd])
       have z_Hpg: "?z_hpg"
       by (rule zenon_and_0 [OF z_Hpf])
       have z_Hph: "?z_hph" (is "?z_hpi&?z_hpj")
       by (rule zenon_and_1 [OF z_Hpf])
       have z_Hpi: "?z_hpi" (is "?z_hpk=?z_hck")
       by (rule zenon_and_0 [OF z_Hph])
       have z_Hpj: "?z_hpj" (is "?z_hpl&?z_hpm")
       by (rule zenon_and_1 [OF z_Hph])
       have z_Hpl: "?z_hpl" (is "?z_hpn=_")
       by (rule zenon_and_0 [OF z_Hpj])
       have z_Hpm: "?z_hpm" (is "?z_hhn&?z_hpo")
       by (rule zenon_and_1 [OF z_Hpj])
       have z_Hhn: "?z_hhn" (is "?z_hgt=_")
       by (rule zenon_and_0 [OF z_Hpm])
       have z_Hpo: "?z_hpo" (is "?z_hhw&?z_hif")
       by (rule zenon_and_1 [OF z_Hpm])
       have z_Hhw: "?z_hhw" (is "?z_hhu=?z_hbv")
       by (rule zenon_and_0 [OF z_Hpo])
       have z_Hif: "?z_hif" (is "?z_hid=?z_hbz")
       by (rule zenon_and_1 [OF z_Hpo])
       have z_Hpp: "~?z_hla((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))))" (is "~(?z_hpq&?z_hpr)")
       by (rule zenon_notex_0 [of "?z_hla" "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))", OF z_Hkp])
       show FALSE
       proof (rule zenon_notand [OF z_Hpp])
        assume z_Hps:"(~?z_hpq)"
        have z_Hpt: "(~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in ?z_hoc))" (is "~?z_hpu")
        by (rule subst [where P="(\<lambda>zenon_Vdv. (~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in zenon_Vdv)))", OF z_Hob z_Hps])
        have z_Hpz: "(~?z_hpg)"
        by (rule zenon_notin_cup_0 [of "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))" "msgs" "{(''type'' :> (''Offer'') @@ ''val'' :> (PickValue((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (TRUE))}", OF z_Hpt])
        show FALSE
        by (rule notE [OF z_Hpz z_Hpg])
       next
        assume z_Hqa:"(~?z_hpr)" (is "~(_&?z_hqb)")
        show FALSE
        proof (rule zenon_notand [OF z_Hqa])
         assume z_Hqc:"(?z_hpk~=?z_hck)"
         show FALSE
         by (rule notE [OF z_Hqc z_Hpi])
        next
         assume z_Hqd:"(~?z_hqb)" (is "~(_&?z_hqe)")
         show FALSE
         proof (rule zenon_notand [OF z_Hqd])
          assume z_Hqf:"(?z_hpn~=a_ca)"
          show FALSE
          by (rule notE [OF z_Hqf z_Hpl])
         next
          assume z_Hqg:"(~?z_hqe)" (is "~(?z_hqh&?z_hqi)")
          show FALSE
          proof (rule zenon_notand [OF z_Hqg])
           assume z_Hgs:"(?z_hgt~=?z_hhm)"
           show FALSE
           by (rule zenon_L1_ [OF z_He z_Hgs z_Hhn])
          next
           assume z_Hqj:"(~?z_hqi)" (is "~(?z_hqk&?z_hql)")
           show FALSE
           proof (rule zenon_notand [OF z_Hqj])
            assume z_Hht:"(?z_hhu~=(a_lastValhash_primea[a_ca]))" (is "_~=?z_hhv")
            show FALSE
            by (rule zenon_L2_ [OF z_Hf z_Hht z_Hhw])
           next
            assume z_Hic:"(?z_hid~=(a_lastPrimedhash_primea[a_ca]))" (is "_~=?z_hie")
            show FALSE
            by (rule zenon_L3_ [OF z_Hg z_Hic z_Hif])
           qed
          qed
         qed
        qed
       qed
      qed
     qed
    next
     assume z_Hqm:"(~AllIdenticalValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))" (is "~?z_hnr")
     assume z_Hoe:"(((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1) \\in Rounds)&bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hnt&?z_hof")
     have z_Hof: "?z_hof"
     by (rule zenon_and_1 [OF z_Hoe])
     have z_Hqn_z_Hof: "(\\E x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))) == ?z_hof" (is "?z_hqn == _")
     by (unfold bEx_def)
     have z_Hqn: "?z_hqn" (is "\\E x : ?z_hqx(x)")
     by (unfold z_Hqn_z_Hof, fact z_Hof)
     have z_Hqy: "?z_hqx((CHOOSE x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hra&?z_hrb")
     by (rule zenon_ex_choose_0 [of "?z_hqx", OF z_Hqn])
     have z_Hrb: "?z_hrb" (is "?z_hrc&?z_hrd")
     by (rule zenon_and_1 [OF z_Hqy])
     have z_Hrd: "?z_hrd" (is "_=?z_hre")
     by (rule zenon_and_1 [OF z_Hrb])
     have z_Hpa: "?z_hkn(a_ca)" (is "_=>?z_hbp")
     by (rule zenon_all_0 [of "?z_hkn" "a_ca", OF z_Hiw])
     show FALSE
     proof (rule zenon_imply [OF z_Hpa])
      assume z_Hpb:"(~?z_hc)"
      show FALSE
      by (rule notE [OF z_Hpb z_Hc])
     next
      assume z_Hbp:"?z_hbp" (is "?z_hbq&?z_hbw")
      have z_Hbw: "?z_hbw" (is "?z_hbx&?z_hca")
      by (rule zenon_and_1 [OF z_Hbp])
      have z_Hca: "?z_hca" (is "?z_hcb&?z_hda")
      by (rule zenon_and_1 [OF z_Hbw])
      have z_Hcb: "?z_hcb" (is "?z_hcc=>?z_hcd")
      by (rule zenon_and_0 [OF z_Hca])
      show FALSE
      proof (rule zenon_imply [OF z_Hcb])
       assume z_Hpc:"(~?z_hcc)" (is "~~?z_hbr")
       show FALSE
       by (rule notE [OF z_Hpc z_Hcc])
      next
       assume z_Hcd:"?z_hcd"
       have z_Hpd_z_Hcd: "(\\E x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))) == ?z_hcd" (is "?z_hpd == _")
       by (unfold bEx_def)
       have z_Hpd: "?z_hpd" (is "\\E x : ?z_hpe(x)")
       by (unfold z_Hpd_z_Hcd, fact z_Hcd)
       have z_Hpf: "?z_hpe((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))))" (is "?z_hpg&?z_hph")
       by (rule zenon_ex_choose_0 [of "?z_hpe", OF z_Hpd])
       have z_Hpg: "?z_hpg"
       by (rule zenon_and_0 [OF z_Hpf])
       have z_Hph: "?z_hph" (is "?z_hpi&?z_hpj")
       by (rule zenon_and_1 [OF z_Hpf])
       have z_Hpi: "?z_hpi" (is "?z_hpk=?z_hck")
       by (rule zenon_and_0 [OF z_Hph])
       have z_Hpj: "?z_hpj" (is "?z_hpl&?z_hpm")
       by (rule zenon_and_1 [OF z_Hph])
       have z_Hpl: "?z_hpl" (is "?z_hpn=_")
       by (rule zenon_and_0 [OF z_Hpj])
       have z_Hpm: "?z_hpm" (is "?z_hhn&?z_hpo")
       by (rule zenon_and_1 [OF z_Hpj])
       have z_Hhn: "?z_hhn" (is "?z_hgt=_")
       by (rule zenon_and_0 [OF z_Hpm])
       have z_Hpo: "?z_hpo" (is "?z_hhw&?z_hif")
       by (rule zenon_and_1 [OF z_Hpm])
       have z_Hhw: "?z_hhw" (is "?z_hhu=?z_hbv")
       by (rule zenon_and_0 [OF z_Hpo])
       have z_Hif: "?z_hif" (is "?z_hid=?z_hbz")
       by (rule zenon_and_1 [OF z_Hpo])
       have z_Hpp: "~?z_hla((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))))" (is "~(?z_hpq&?z_hpr)")
       by (rule zenon_notex_0 [of "?z_hla" "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))", OF z_Hkp])
       show FALSE
       proof (rule zenon_notand [OF z_Hpp])
        assume z_Hps:"(~?z_hpq)"
        have z_Hrf: "(~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in ?z_hre))" (is "~?z_hrg")
        by (rule subst [where P="(\<lambda>zenon_Vdv. (~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in zenon_Vdv)))", OF z_Hrd z_Hps])
        have z_Hpz: "(~?z_hpg)"
        by (rule zenon_notin_cup_0 [of "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))" "msgs" "{(''type'' :> (''Offer'') @@ ''val'' :> ((CHOOSE x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))})))))) @@ ''round'' :> ((PickRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))) + 1)) @@ ''primed'' :> (FALSE))}", OF z_Hrf])
        show FALSE
        by (rule notE [OF z_Hpz z_Hpg])
       next
        assume z_Hqa:"(~?z_hpr)" (is "~(_&?z_hqb)")
        show FALSE
        proof (rule zenon_notand [OF z_Hqa])
         assume z_Hqc:"(?z_hpk~=?z_hck)"
         show FALSE
         by (rule notE [OF z_Hqc z_Hpi])
        next
         assume z_Hqd:"(~?z_hqb)" (is "~(_&?z_hqe)")
         show FALSE
         proof (rule zenon_notand [OF z_Hqd])
          assume z_Hqf:"(?z_hpn~=a_ca)"
          show FALSE
          by (rule notE [OF z_Hqf z_Hpl])
         next
          assume z_Hqg:"(~?z_hqe)" (is "~(?z_hqh&?z_hqi)")
          show FALSE
          proof (rule zenon_notand [OF z_Hqg])
           assume z_Hgs:"(?z_hgt~=?z_hhm)"
           show FALSE
           by (rule zenon_L1_ [OF z_He z_Hgs z_Hhn])
          next
           assume z_Hqj:"(~?z_hqi)" (is "~(?z_hqk&?z_hql)")
           show FALSE
           proof (rule zenon_notand [OF z_Hqj])
            assume z_Hht:"(?z_hhu~=(a_lastValhash_primea[a_ca]))" (is "_~=?z_hhv")
            show FALSE
            by (rule zenon_L2_ [OF z_Hf z_Hht z_Hhw])
           next
            assume z_Hic:"(?z_hid~=(a_lastPrimedhash_primea[a_ca]))" (is "_~=?z_hie")
            show FALSE
            by (rule zenon_L3_ [OF z_Hg z_Hic z_Hif])
           qed
          qed
         qed
        qed
       qed
      qed
     qed
    qed
   qed
  next
   assume z_Hrj:"(~AllIdenticalRounds((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))" (is "~?z_hnn")
   assume z_Hop:"bEx(SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))})))))" (is "?z_hop")
   have z_Hrk_z_Hop: "(\\E x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))}))))) == ?z_hop" (is "?z_hrk == _")
   by (unfold bEx_def)
   have z_Hrk: "?z_hrk" (is "\\E x : ?z_hrt(x)")
   by (unfold z_Hrk_z_Hop, fact z_Hop)
   have z_Hru: "?z_hrt((CHOOSE x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hrw&?z_hrx")
   by (rule zenon_ex_choose_0 [of "?z_hrt", OF z_Hrk])
   have z_Hrx: "?z_hrx" (is "?z_hry&?z_hrz")
   by (rule zenon_and_1 [OF z_Hru])
   have z_Hrz: "?z_hrz" (is "_=?z_hsa")
   by (rule zenon_and_1 [OF z_Hrx])
   have z_Hpa: "?z_hkn(a_ca)" (is "_=>?z_hbp")
   by (rule zenon_all_0 [of "?z_hkn" "a_ca", OF z_Hiw])
   show FALSE
   proof (rule zenon_imply [OF z_Hpa])
    assume z_Hpb:"(~?z_hc)"
    show FALSE
    by (rule notE [OF z_Hpb z_Hc])
   next
    assume z_Hbp:"?z_hbp" (is "?z_hbq&?z_hbw")
    have z_Hbw: "?z_hbw" (is "?z_hbx&?z_hca")
    by (rule zenon_and_1 [OF z_Hbp])
    have z_Hca: "?z_hca" (is "?z_hcb&?z_hda")
    by (rule zenon_and_1 [OF z_Hbw])
    have z_Hcb: "?z_hcb" (is "?z_hcc=>?z_hcd")
    by (rule zenon_and_0 [OF z_Hca])
    show FALSE
    proof (rule zenon_imply [OF z_Hcb])
     assume z_Hpc:"(~?z_hcc)" (is "~~?z_hbr")
     show FALSE
     by (rule notE [OF z_Hpc z_Hcc])
    next
     assume z_Hcd:"?z_hcd"
     have z_Hpd_z_Hcd: "(\\E x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))) == ?z_hcd" (is "?z_hpd == _")
     by (unfold bEx_def)
     have z_Hpd: "?z_hpd" (is "\\E x : ?z_hpe(x)")
     by (unfold z_Hpd_z_Hcd, fact z_Hcd)
     have z_Hpf: "?z_hpe((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))))" (is "?z_hpg&?z_hph")
     by (rule zenon_ex_choose_0 [of "?z_hpe", OF z_Hpd])
     have z_Hpg: "?z_hpg"
     by (rule zenon_and_0 [OF z_Hpf])
     have z_Hph: "?z_hph" (is "?z_hpi&?z_hpj")
     by (rule zenon_and_1 [OF z_Hpf])
     have z_Hpi: "?z_hpi" (is "?z_hpk=?z_hck")
     by (rule zenon_and_0 [OF z_Hph])
     have z_Hpj: "?z_hpj" (is "?z_hpl&?z_hpm")
     by (rule zenon_and_1 [OF z_Hph])
     have z_Hpl: "?z_hpl" (is "?z_hpn=_")
     by (rule zenon_and_0 [OF z_Hpj])
     have z_Hpm: "?z_hpm" (is "?z_hhn&?z_hpo")
     by (rule zenon_and_1 [OF z_Hpj])
     have z_Hhn: "?z_hhn" (is "?z_hgt=_")
     by (rule zenon_and_0 [OF z_Hpm])
     have z_Hpo: "?z_hpo" (is "?z_hhw&?z_hif")
     by (rule zenon_and_1 [OF z_Hpm])
     have z_Hhw: "?z_hhw" (is "?z_hhu=?z_hbv")
     by (rule zenon_and_0 [OF z_Hpo])
     have z_Hif: "?z_hif" (is "?z_hid=?z_hbz")
     by (rule zenon_and_1 [OF z_Hpo])
     have z_Hpp: "~?z_hla((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))))" (is "~(?z_hpq&?z_hpr)")
     by (rule zenon_notex_0 [of "?z_hla" "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))", OF z_Hkp])
     show FALSE
     proof (rule zenon_notand [OF z_Hpp])
      assume z_Hps:"(~?z_hpq)"
      have z_Hsb: "(~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in ?z_hsa))" (is "~?z_hsc")
      by (rule subst [where P="(\<lambda>zenon_Vdv. (~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in zenon_Vdv)))", OF z_Hrz z_Hps])
      have z_Hpz: "(~?z_hpg)"
      by (rule zenon_notin_cup_0 [of "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))" "msgs" "{(''type'' :> (''Offer'') @@ ''val'' :> ((CHOOSE x:((x \\in SuccessorValues((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))}))))))))))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))})))))) @@ ''round'' :> (MaxLastRound((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(x), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))})))))))))) @@ ''primed'' :> (FALSE))}", OF z_Hsb])
      show FALSE
      by (rule notE [OF z_Hpz z_Hpg])
     next
      assume z_Hqa:"(~?z_hpr)" (is "~(_&?z_hqb)")
      show FALSE
      proof (rule zenon_notand [OF z_Hqa])
       assume z_Hqc:"(?z_hpk~=?z_hck)"
       show FALSE
       by (rule notE [OF z_Hqc z_Hpi])
      next
       assume z_Hqd:"(~?z_hqb)" (is "~(_&?z_hqe)")
       show FALSE
       proof (rule zenon_notand [OF z_Hqd])
        assume z_Hqf:"(?z_hpn~=a_ca)"
        show FALSE
        by (rule notE [OF z_Hqf z_Hpl])
       next
        assume z_Hqg:"(~?z_hqe)" (is "~(?z_hqh&?z_hqi)")
        show FALSE
        proof (rule zenon_notand [OF z_Hqg])
         assume z_Hgs:"(?z_hgt~=?z_hhm)"
         show FALSE
         by (rule zenon_L1_ [OF z_He z_Hgs z_Hhn])
        next
         assume z_Hqj:"(~?z_hqi)" (is "~(?z_hqk&?z_hql)")
         show FALSE
         proof (rule zenon_notand [OF z_Hqj])
          assume z_Hht:"(?z_hhu~=(a_lastValhash_primea[a_ca]))" (is "_~=?z_hhv")
          show FALSE
          by (rule zenon_L2_ [OF z_Hf z_Hht z_Hhw])
         next
          assume z_Hic:"(?z_hid~=(a_lastPrimedhash_primea[a_ca]))" (is "_~=?z_hie")
          show FALSE
          by (rule zenon_L3_ [OF z_Hg z_Hic z_Hif])
         qed
        qed
       qed
      qed
     qed
    qed
   qed
  qed
 next
  assume z_Hgi:"?z_hgi"
  have z_Hsf_z_Hgi: "(\\E x:((x \\in Values)&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))}))))) == ?z_hgi" (is "?z_hsf == _")
  by (unfold bEx_def)
  have z_Hsf: "?z_hsf" (is "\\E x : ?z_hsp(x)")
  by (unfold z_Hsf_z_Hgi, fact z_Hgi)
  have z_Hsq: "?z_hsp((CHOOSE x:((x \\in Values)&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hss&?z_hst")
  by (rule zenon_ex_choose_0 [of "?z_hsp", OF z_Hsf])
  have z_Hst: "?z_hst" (is "?z_hsu&?z_hsv")
  by (rule zenon_and_1 [OF z_Hsq])
  have z_Hsv: "?z_hsv" (is "_=?z_hsw")
  by (rule zenon_and_1 [OF z_Hst])
  have z_Hcc: "((lastRound[a_ca])~=?z_hbe)" (is "?z_hbs~=_")
  by (rule subst [where P="(\<lambda>zenon_Vtzb. ((zenon_Vtzb[a_ca])~=?z_hbe))", OF z_He z_Him])
  have z_Hpa: "?z_hkn(a_ca)" (is "_=>?z_hbp")
  by (rule zenon_all_0 [of "?z_hkn" "a_ca", OF z_Hiw])
  show FALSE
  proof (rule zenon_imply [OF z_Hpa])
   assume z_Hpb:"(~?z_hc)"
   show FALSE
   by (rule notE [OF z_Hpb z_Hc])
  next
   assume z_Hbp:"?z_hbp" (is "?z_hbq&?z_hbw")
   have z_Hbw: "?z_hbw" (is "?z_hbx&?z_hca")
   by (rule zenon_and_1 [OF z_Hbp])
   have z_Hca: "?z_hca" (is "?z_hcb&?z_hda")
   by (rule zenon_and_1 [OF z_Hbw])
   have z_Hcb: "?z_hcb" (is "?z_hcc=>?z_hcd")
   by (rule zenon_and_0 [OF z_Hca])
   show FALSE
   proof (rule zenon_imply [OF z_Hcb])
    assume z_Hpc:"(~?z_hcc)" (is "~~?z_hbr")
    show FALSE
    by (rule notE [OF z_Hpc z_Hcc])
   next
    assume z_Hcd:"?z_hcd"
    have z_Hpd_z_Hcd: "(\\E x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))) == ?z_hcd" (is "?z_hpd == _")
    by (unfold bEx_def)
    have z_Hpd: "?z_hpd" (is "\\E x : ?z_hpe(x)")
    by (unfold z_Hpd_z_Hcd, fact z_Hcd)
    have z_Hpf: "?z_hpe((CHOOSE x:((x \\in msgs)&(((x[''type''])=''Answer'')&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=(lastVal[a_ca]))&((x[''lastPrimed''])=(lastPrimed[a_ca])))))))))" (is "?z_hpg&?z_hph")
    by (rule zenon_ex_choose_0 [of "?z_hpe", OF z_Hpd])
    have z_Hpg: "?z_hpg"
    by (rule zenon_and_0 [OF z_Hpf])
    have z_Hph: "?z_hph" (is "?z_hpi&?z_hpj")
    by (rule zenon_and_1 [OF z_Hpf])
    have z_Hpi: "?z_hpi" (is "?z_hpk=?z_hck")
    by (rule zenon_and_0 [OF z_Hph])
    have z_Hpj: "?z_hpj" (is "?z_hpl&?z_hpm")
    by (rule zenon_and_1 [OF z_Hph])
    have z_Hpl: "?z_hpl" (is "?z_hpn=_")
    by (rule zenon_and_0 [OF z_Hpj])
    have z_Hpm: "?z_hpm" (is "?z_hhn&?z_hpo")
    by (rule zenon_and_1 [OF z_Hpj])
    have z_Hhn: "?z_hhn" (is "?z_hgt=_")
    by (rule zenon_and_0 [OF z_Hpm])
    have z_Hpo: "?z_hpo" (is "?z_hhw&?z_hif")
    by (rule zenon_and_1 [OF z_Hpm])
    have z_Hhw: "?z_hhw" (is "?z_hhu=?z_hbv")
    by (rule zenon_and_0 [OF z_Hpo])
    have z_Hif: "?z_hif" (is "?z_hid=?z_hbz")
    by (rule zenon_and_1 [OF z_Hpo])
    have z_Hpp: "~?z_hla((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))))" (is "~(?z_hpq&?z_hpr)")
    by (rule zenon_notex_0 [of "?z_hla" "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))", OF z_Hkp])
    show FALSE
    proof (rule zenon_notand [OF z_Hpp])
     assume z_Hps:"(~?z_hpq)"
     have z_Hsx: "(~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in ?z_hsw))" (is "~?z_hsy")
     by (rule subst [where P="(\<lambda>zenon_Vdv. (~((CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz))))))) \\in zenon_Vdv)))", OF z_Hsv z_Hps])
     have z_Hpz: "(~?z_hpg)"
     by (rule zenon_notin_cup_0 [of "(CHOOSE x:((x \\in msgs)&(((x[''type''])=?z_hck)&(((x[''cons''])=a_ca)&(((x[''lastRound''])=?z_hbs)&(((x[''lastVal''])=?z_hbv)&((x[''lastPrimed''])=?z_hbz)))))))" "msgs" "{(''type'' :> (''Offer'') @@ ''val'' :> ((CHOOSE x:((x \\in Values)&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))})))))) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))}", OF z_Hsx])
     show FALSE
     by (rule notE [OF z_Hpz z_Hpg])
    next
     assume z_Hqa:"(~?z_hpr)" (is "~(_&?z_hqb)")
     show FALSE
     proof (rule zenon_notand [OF z_Hqa])
      assume z_Hqc:"(?z_hpk~=?z_hck)"
      show FALSE
      by (rule notE [OF z_Hqc z_Hpi])
     next
      assume z_Hqd:"(~?z_hqb)" (is "~(_&?z_hqe)")
      show FALSE
      proof (rule zenon_notand [OF z_Hqd])
       assume z_Hqf:"(?z_hpn~=a_ca)"
       show FALSE
       by (rule notE [OF z_Hqf z_Hpl])
      next
       assume z_Hqg:"(~?z_hqe)" (is "~(?z_hqh&?z_hqi)")
       show FALSE
       proof (rule zenon_notand [OF z_Hqg])
        assume z_Hgs:"(?z_hgt~=?z_hhm)"
        show FALSE
        by (rule zenon_L1_ [OF z_He z_Hgs z_Hhn])
       next
        assume z_Hqj:"(~?z_hqi)" (is "~(?z_hqk&?z_hql)")
        show FALSE
        proof (rule zenon_notand [OF z_Hqj])
         assume z_Hht:"(?z_hhu~=(a_lastValhash_primea[a_ca]))" (is "_~=?z_hhv")
         show FALSE
         by (rule zenon_L2_ [OF z_Hf z_Hht z_Hhw])
        next
         assume z_Hic:"(?z_hid~=(a_lastPrimedhash_primea[a_ca]))" (is "_~=?z_hie")
         show FALSE
         by (rule zenon_L3_ [OF z_Hg z_Hic z_Hif])
        qed
       qed
      qed
     qed
    qed
   qed
  qed
 qed
qed
(* END-PROOF *)
ML_command {* writeln "*** TLAPS EXIT 907"; *} qed
lemma ob'917:
fixes Consenters
fixes Values
fixes Quorums
(* usable definition Rounds suppressed *)
fixes msgs msgs'
fixes lastRound lastRound'
fixes lastVal lastVal'
fixes lastPrimed lastPrimed'
(* usable definition vars suppressed *)
(* usable definition None suppressed *)
(* usable definition Answers suppressed *)
(* usable definition QuorumAnswers suppressed *)
(* usable definition SetMax suppressed *)
(* usable definition MaxLastRound suppressed *)
(* usable definition AllIdenticalRounds suppressed *)
(* usable definition AllIdenticalValues suppressed *)
(* usable definition AllPrimed suppressed *)
(* usable definition PickValue suppressed *)
(* usable definition PickRound suppressed *)
(* usable definition SuccessorValues suppressed *)
(* usable definition Init suppressed *)
(* usable definition Answer suppressed *)
(* usable definition Decided suppressed *)
(* usable definition Terminated suppressed *)
(* usable definition Spec suppressed *)
(* usable definition Messages suppressed *)
(* usable definition TypeOK suppressed *)
(* usable definition Chosen suppressed *)
(* usable definition Consistency suppressed *)
(* usable definition MsgInv suppressed *)
(* usable definition NatInductiveDefHypothesis suppressed *)
(* usable definition NatInductiveDefConclusion suppressed *)
(* usable definition FiniteNatInductiveDefHypothesis suppressed *)
(* usable definition FiniteNatInductiveDefConclusion suppressed *)
(* usable definition IsFiniteSet suppressed *)
(* usable definition Cardinality suppressed *)
(* usable definition Restrict suppressed *)
(* usable definition Range suppressed *)
(* usable definition Inverse suppressed *)
(* usable definition Injection suppressed *)
(* usable definition Surjection suppressed *)
(* usable definition Bijection suppressed *)
(* usable definition ExistsInjection suppressed *)
(* usable definition ExistsSurjection suppressed *)
(* usable definition ExistsBijection suppressed *)
(* usable definition IsTransitivelyClosedOn suppressed *)
(* usable definition IsWellFoundedOn suppressed *)
(* usable definition SetLessThan suppressed *)
(* usable definition WFDefOn suppressed *)
(* usable definition OpDefinesFcn suppressed *)
(* usable definition WFInductiveDefines suppressed *)
(* usable definition WFInductiveUnique suppressed *)
(* usable definition TransitiveClosureOn suppressed *)
(* usable definition OpToRel suppressed *)
(* usable definition PreImage suppressed *)
(* usable definition LexPairOrdering suppressed *)
(* usable definition LexProductOrdering suppressed *)
(* usable definition FiniteSubsetsOf suppressed *)
(* usable definition StrictSubsetOrdering suppressed *)
(* usable definition HasMax suppressed *)
(* usable definition ChosenIn suppressed *)
(* usable definition NotOfferedIn suppressed *)
(* usable definition OfferedIn suppressed *)
(* usable definition AnsweredIn suppressed *)
assumes v'160: "((((msgs) \<in> ((SUBSET (Messages))))) & (MsgInv) & (((lastVal) \<in> ([(Consenters) \<rightarrow> (((Values) \<union> ({(None)})))]))) & (((lastRound) \<in> ([(Consenters) \<rightarrow> (((Rounds) \<union> ({((minus (((Succ[0])))))})))]))) & (((lastPrimed) \<in> ([(Consenters) \<rightarrow> (BOOLEAN)]))) & (\<forall> a_ca \<in> (Consenters) : ((((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Leftrightarrow> (((fapply ((lastVal), (a_ca))) = (None))))) & (((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Rightarrow> ((~ (fapply ((lastPrimed), (a_ca))))))) & (((((fapply ((lastRound), (a_ca))) \<noteq> ((minus (((Succ[0]))))))) \<Rightarrow> (\<exists> m \<in> (msgs) : ((((fapply ((m), (''type''))) = (''Answer''))) & (((fapply ((m), (''cons''))) = (a_ca))) & (((fapply ((m), (''lastRound''))) = (fapply ((lastRound), (a_ca))))) & (((fapply ((m), (''lastVal''))) = (fapply ((lastVal), (a_ca))))) & (((fapply ((m), (''lastPrimed''))) = (fapply ((lastPrimed), (a_ca))))))))) & ((~ (\<exists> m \<in> (msgs) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply ((lastRound), (a_ca))))))))))) & (\<forall> a_m1a \<in> (msgs) : (\<forall> a_m2a \<in> (msgs) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a))))))))))"
assumes v'161: "((((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (((((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE))))})))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))}))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE))))})))))))))))) | (\<exists> v \<in> (Values) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))}))))))))) & (((((a_lastRoundhash_primea :: c)) = (lastRound))) & ((((a_lastValhash_primea :: c)) = (lastVal))) & ((((a_lastPrimedhash_primea :: c)) = (lastPrimed))))) | (\<exists> a_ca \<in> (Consenters) : ((Answer ((a_ca))))) | (Decided) | (Terminated))"
fixes a_ca
assumes a_ca_in : "(a_ca \<in> (Consenters))"
fixes Q
assumes Q_in : "(Q \<in> (Quorums))"
fixes A
assumes A_in : "(A \<in> ((QuorumAnswers ((Q)))))"
assumes v'189: "(cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (((((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE))))})))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))}))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : (((((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))) \<notin> (msgs))) \<and> ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE))))}))))))))))"
shows "(((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE))))}))))) | (\<exists> v \<in> ((SuccessorValues ((A)))) : ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))})))))) | (\<exists> v \<in> ((SuccessorValues ((A)))) : ((((a_msgshash_primea :: c)) = (((msgs) \<union> ({(((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE))))})))))))"(is "PROP ?ob'917")
proof -
ML_command {* writeln "*** TLAPS ENTER 917"; *}
show "PROP ?ob'917"

(* BEGIN ZENON INPUT
;; file=SpireTlaps.tlaps/tlapm_265186.znn; PATH='/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/lib/tlaps/bin'; zenon -p0 -x tla -oisar -max-time 1d "$file" >SpireTlaps.tlaps/tlapm_265186.znn.out
;; obligation #917
$hyp "v'160" (/\ (TLA.in msgs (TLA.SUBSET Messages)) MsgInv (TLA.in lastVal
(TLA.FuncSet Consenters (TLA.cup Values (TLA.set None)))) (TLA.in lastRound
(TLA.FuncSet Consenters (TLA.cup Rounds
(TLA.set (arith.minus (TLA.fapply TLA.Succ 0)))))) (TLA.in lastPrimed
(TLA.FuncSet Consenters (TLA.set T. F.)))
(TLA.bAll Consenters ((a_ca) (/\ (<=> (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))) (= (TLA.fapply lastVal a_ca) None))
(=> (= (TLA.fapply lastRound a_ca) (arith.minus (TLA.fapply TLA.Succ 0)))
(-. (TLA.fapply lastPrimed a_ca))) (=> (-. (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))))
(TLA.bEx msgs ((m) (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca) (= (TLA.fapply m "lastRound")
(TLA.fapply lastRound a_ca)) (= (TLA.fapply m "lastVal")
(TLA.fapply lastVal a_ca)) (= (TLA.fapply m "lastPrimed")
(TLA.fapply lastPrimed a_ca))))))
(-. (TLA.bEx msgs ((m) (/\ (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca)) (arith.lt (TLA.fapply lastRound a_ca)
(TLA.fapply m "lastRound"))))))
(TLA.bAll msgs ((a_m1a) (TLA.bAll msgs ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a))))))))))
$hyp "v'161" (\/ (/\ (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(/\ (-. (TLA.in (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.)))))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.)))))))))) (TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))))))))))
(TLA.bEx Values ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.))))))))
(/\ (= a_lastRoundhash_primea lastRound) (= a_lastValhash_primea lastVal)
(= a_lastPrimedhash_primea lastPrimed)))
(TLA.bEx Consenters ((a_ca) (Answer a_ca))) Decided
Terminated)
$hyp "a_ca_in" (TLA.in a_ca Consenters)
$hyp "Q_in" (TLA.in Q Quorums)
$hyp "A_in" (TLA.in A (QuorumAnswers Q))
$hyp "v'189" (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(/\ (-. (TLA.in (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.)))))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.) msgs)) (= a_msgshash_primea
(TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.)))))))))) (TLA.bEx (SuccessorValues A) ((v) (/\ (-. (TLA.in (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)
msgs)) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))))))
$goal (\/ (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))))
(TLA.bEx (SuccessorValues A) ((v) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))
(TLA.bEx (SuccessorValues A) ((v) (= a_msgshash_primea (TLA.cup msgs
(TLA.set (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)))))))
END ZENON  INPUT *)
(* PROOF-FOUND *)
(* BEGIN-PROOF *)
proof (rule zenon_nnpp)
 have z_Hf:"cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))})))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))), bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hf")
 using v'189 by blast
 assume z_Hg:"(~((a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))}))|(bEx(SuccessorValues(A), (\<lambda>v. (a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))|bEx(SuccessorValues(A), (\<lambda>v. (a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))))" (is "~(?z_hbg|?z_hch)")
 have z_Hcm: "(a_msgshash_primea~=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE))}))" (is "_~=?z_hbi")
 by (rule zenon_notor_0 [OF z_Hg])
 have z_Hcn: "(~?z_hch)" (is "~(?z_hci|?z_hck)")
 by (rule zenon_notor_1 [OF z_Hg])
 have z_Hco: "(~?z_hci)"
 by (rule zenon_notor_0 [OF z_Hcn])
 have z_Hcp: "(~?z_hck)"
 by (rule zenon_notor_1 [OF z_Hcn])
 have z_Hcq_z_Hco: "(~(\\E x:((x \\in SuccessorValues(A))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))) == (~?z_hci)" (is "?z_hcq == ?z_hco")
 by (unfold bEx_def)
 have z_Hcq: "?z_hcq" (is "~(\\E x : ?z_hcz(x))")
 by (unfold z_Hcq_z_Hco, fact z_Hco)
 have z_Hda_z_Hcp: "(~(\\E x:((x \\in SuccessorValues(A))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))) == (~?z_hck)" (is "?z_hda == ?z_hcp")
 by (unfold bEx_def)
 have z_Hda: "?z_hda" (is "~(\\E x : ?z_hdh(x))")
 by (unfold z_Hda_z_Hcp, fact z_Hcp)
 show FALSE
 proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vf. zenon_Vf)" "AllIdenticalRounds(A)" "cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg)), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))))" "bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))", OF z_Hf])
  assume z_Hh:"AllIdenticalRounds(A)" (is "?z_hh")
  assume z_Hj:"cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg)), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))))" (is "?z_hj")
  show FALSE
  proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vf. zenon_Vf)" "AllPrimed(A)" "FALSE" "cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg)), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))", OF z_Hj])
   assume z_Hk:"AllPrimed(A)" (is "?z_hk")
   assume z_Hl:"FALSE" (is "?z_hl")
   show FALSE
   by (rule z_Hl)
  next
   assume z_Hdk:"(~AllPrimed(A))" (is "~?z_hk")
   assume z_Hm:"cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg)), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))))" (is "?z_hm")
   show FALSE
   proof (rule zenon_ifthenelse [of "(\<lambda>zenon_Vf. zenon_Vf)" "AllIdenticalValues(A)" "(((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg))" "(((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))", OF z_Hm])
    assume z_Hn:"AllIdenticalValues(A)" (is "?z_hn")
    assume z_Ho:"(((PickRound(A) + 1) \\in Rounds)&((~((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)) \\in msgs))&?z_hbg))" (is "?z_hp&?z_hu")
    have z_Hu: "?z_hu" (is "?z_hv&_")
    by (rule zenon_and_1 [OF z_Ho])
    have z_Hbg: "?z_hbg"
    by (rule zenon_and_1 [OF z_Hu])
    show FALSE
    by (rule notE [OF z_Hcm z_Hbg])
   next
    assume z_Hdl:"(~AllIdenticalValues(A))" (is "~?z_hn")
    assume z_Hbk:"(((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hp&?z_hbl")
    have z_Hbl: "?z_hbl"
    by (rule zenon_and_1 [OF z_Hbk])
    have z_Hdm_z_Hbl: "(\\E x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))) == ?z_hbl" (is "?z_hdm == _")
    by (unfold bEx_def)
    have z_Hdm: "?z_hdm" (is "\\E x : ?z_hdr(x)")
    by (unfold z_Hdm_z_Hbl, fact z_Hbl)
    have z_Hds: "?z_hdr((CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hdu&?z_hdv")
    by (rule zenon_ex_choose_0 [of "?z_hdr", OF z_Hdm])
    have z_Hdu: "?z_hdu"
    by (rule zenon_and_0 [OF z_Hds])
    have z_Hdv: "?z_hdv" (is "?z_hdw&?z_hdx")
    by (rule zenon_and_1 [OF z_Hds])
    have z_Hdx: "?z_hdx" (is "_=?z_hdy")
    by (rule zenon_and_1 [OF z_Hdv])
    have z_Hdz: "~?z_hcz((CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))}))))))"
    by (rule zenon_notex_0 [of "?z_hcz" "(CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE))})))))", OF z_Hcq])
    show FALSE
    proof (rule zenon_notand [OF z_Hdz])
     assume z_Hea:"(~?z_hdu)"
     show FALSE
     by (rule notE [OF z_Hea z_Hdu])
    next
     assume z_Heb:"(a_msgshash_primea~=?z_hdy)"
     show FALSE
     by (rule notE [OF z_Heb z_Hdx])
    qed
   qed
  qed
 next
  assume z_Hec:"(~AllIdenticalRounds(A))" (is "~?z_hh")
  assume z_Hbw:"bEx(SuccessorValues(A), (\<lambda>v. ((~((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))" (is "?z_hbw")
  have z_Hed_z_Hbw: "(\\E x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))) == ?z_hbw" (is "?z_hed == _")
  by (unfold bEx_def)
  have z_Hed: "?z_hed" (is "\\E x : ?z_hei(x)")
  by (unfold z_Hed_z_Hbw, fact z_Hbw)
  have z_Hej: "?z_hei((CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))" (is "?z_hel&?z_hem")
  by (rule zenon_ex_choose_0 [of "?z_hei", OF z_Hed])
  have z_Hel: "?z_hel"
  by (rule zenon_and_0 [OF z_Hej])
  have z_Hem: "?z_hem" (is "?z_hen&?z_heo")
  by (rule zenon_and_1 [OF z_Hej])
  have z_Heo: "?z_heo" (is "_=?z_hep")
  by (rule zenon_and_1 [OF z_Hem])
  have z_Heq: "~?z_hdh((CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))}))))))"
  by (rule zenon_notex_0 [of "?z_hdh" "(CHOOSE x:((x \\in SuccessorValues(A))&((~((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)) \\in msgs))&(a_msgshash_primea=(msgs \\cup {(''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))})))))", OF z_Hda])
  show FALSE
  proof (rule zenon_notand [OF z_Heq])
   assume z_Her:"(~?z_hel)"
   show FALSE
   by (rule notE [OF z_Her z_Hel])
  next
   assume z_Hes:"(a_msgshash_primea~=?z_hep)"
   show FALSE
   by (rule notE [OF z_Hes z_Heo])
  qed
 qed
qed
(* END-PROOF *)
ML_command {* writeln "*** TLAPS EXIT 917"; *} qed
lemma ob'927:
fixes Consenters
fixes Values
fixes Quorums
(* usable definition Rounds suppressed *)
fixes msgs msgs'
fixes lastRound lastRound'
fixes lastVal lastVal'
fixes lastPrimed lastPrimed'
(* usable definition vars suppressed *)
(* usable definition None suppressed *)
(* usable definition Send suppressed *)
(* usable definition TrySend suppressed *)
(* usable definition Answers suppressed *)
(* usable definition QuorumAnswers suppressed *)
(* usable definition SetMax suppressed *)
(* usable definition MaxLastRound suppressed *)
(* usable definition AllIdenticalRounds suppressed *)
(* usable definition AllIdenticalValues suppressed *)
(* usable definition AllPrimed suppressed *)
(* usable definition PickValue suppressed *)
(* usable definition PickRound suppressed *)
(* usable definition SuccessorValues suppressed *)
(* usable definition Init suppressed *)
(* usable definition Answer suppressed *)
(* usable definition Decided suppressed *)
(* usable definition Terminated suppressed *)
(* usable definition Spec suppressed *)
(* usable definition Messages suppressed *)
(* usable definition TypeOK suppressed *)
(* usable definition Chosen suppressed *)
(* usable definition Consistency suppressed *)
(* usable definition MsgInv suppressed *)
(* usable definition NatInductiveDefHypothesis suppressed *)
(* usable definition NatInductiveDefConclusion suppressed *)
(* usable definition FiniteNatInductiveDefHypothesis suppressed *)
(* usable definition FiniteNatInductiveDefConclusion suppressed *)
(* usable definition IsFiniteSet suppressed *)
(* usable definition Cardinality suppressed *)
(* usable definition Restrict suppressed *)
(* usable definition Range suppressed *)
(* usable definition Inverse suppressed *)
(* usable definition Injection suppressed *)
(* usable definition Surjection suppressed *)
(* usable definition Bijection suppressed *)
(* usable definition ExistsInjection suppressed *)
(* usable definition ExistsSurjection suppressed *)
(* usable definition ExistsBijection suppressed *)
(* usable definition IsTransitivelyClosedOn suppressed *)
(* usable definition IsWellFoundedOn suppressed *)
(* usable definition SetLessThan suppressed *)
(* usable definition WFDefOn suppressed *)
(* usable definition OpDefinesFcn suppressed *)
(* usable definition WFInductiveDefines suppressed *)
(* usable definition WFInductiveUnique suppressed *)
(* usable definition TransitiveClosureOn suppressed *)
(* usable definition OpToRel suppressed *)
(* usable definition PreImage suppressed *)
(* usable definition LexPairOrdering suppressed *)
(* usable definition LexProductOrdering suppressed *)
(* usable definition FiniteSubsetsOf suppressed *)
(* usable definition StrictSubsetOrdering suppressed *)
(* usable definition HasMax suppressed *)
(* usable definition ChosenIn suppressed *)
(* usable definition NotOfferedIn suppressed *)
(* usable definition OfferedIn suppressed *)
(* usable definition AnsweredIn suppressed *)
assumes v'162: "((((msgs) \<in> ((SUBSET (Messages))))) & (MsgInv) & (((lastVal) \<in> ([(Consenters) \<rightarrow> (((Values) \<union> ({(None)})))]))) & (((lastRound) \<in> ([(Consenters) \<rightarrow> (((Rounds) \<union> ({((minus (((Succ[0])))))})))]))) & (((lastPrimed) \<in> ([(Consenters) \<rightarrow> (BOOLEAN)]))) & (\<forall> a_ca \<in> (Consenters) : ((((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Leftrightarrow> (((fapply ((lastVal), (a_ca))) = (None))))) & (((((fapply ((lastRound), (a_ca))) = ((minus (((Succ[0]))))))) \<Rightarrow> ((~ (fapply ((lastPrimed), (a_ca))))))) & (((((fapply ((lastRound), (a_ca))) \<noteq> ((minus (((Succ[0]))))))) \<Rightarrow> (\<exists> m \<in> (msgs) : ((((fapply ((m), (''type''))) = (''Answer''))) & (((fapply ((m), (''cons''))) = (a_ca))) & (((fapply ((m), (''lastRound''))) = (fapply ((lastRound), (a_ca))))) & (((fapply ((m), (''lastVal''))) = (fapply ((lastVal), (a_ca))))) & (((fapply ((m), (''lastPrimed''))) = (fapply ((lastPrimed), (a_ca))))))))) & ((~ (\<exists> m \<in> (msgs) : (((((((fapply ((m), (''type''))) = (''Answer''))) \<and> (((fapply ((m), (''cons''))) = (a_ca))))) \<and> ((greater ((fapply ((m), (''lastRound''))), (fapply ((lastRound), (a_ca))))))))))) & (\<forall> a_m1a \<in> (msgs) : (\<forall> a_m2a \<in> (msgs) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a))))))))))"
assumes v'163: "((((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))))) | (\<exists> v \<in> (Values) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))))))) & (((((a_lastRoundhash_primea :: c)) = (lastRound))) & ((((a_lastValhash_primea :: c)) = (lastVal))) & ((((a_lastPrimedhash_primea :: c)) = (lastPrimed))))) | (\<exists> a_ca \<in> (Consenters) : ((Answer ((a_ca))))) | (Decided) | (Terminated))"
fixes a_ca
assumes a_ca_in : "(a_ca \<in> (Consenters))"
assumes v'187: "((\<exists> Q \<in> (Quorums) : (\<exists> A \<in> ((QuorumAnswers ((Q)))) : (cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))))) | (\<exists> v \<in> (Values) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE)))))))))"
assumes v'188: "((((a_lastRoundhash_primea :: c)) = (lastRound)))"
assumes v'189: "((((a_lastValhash_primea :: c)) = (lastVal)))"
assumes v'190: "((((a_lastPrimedhash_primea :: c)) = (lastPrimed)))"
assumes v'191: "((\<And> Q :: c. Q \<in> (Quorums) \<Longrightarrow> (\<And> A :: c. A \<in> ((QuorumAnswers ((Q)))) \<Longrightarrow> ((cond(((AllIdenticalRounds ((A)))), (cond(((AllPrimed ((A)))), (FALSE), (cond(((AllIdenticalValues ((A)))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> ((PickValue ((A))))) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (TRUE)))))))), (((((arith_add (((PickRound ((A)))), ((Succ[0]))))) \<in> (Rounds))) & (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((arith_add (((PickRound ((A)))), ((Succ[0])))))) @@ (''primed'' :> (FALSE))))))))))))), (\<exists> v \<in> ((SuccessorValues ((A)))) : ((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((MaxLastRound ((A))))) @@ (''primed'' :> (FALSE)))))))))) \<Longrightarrow> (\<forall> a_m1a \<in> ((a_msgshash_primea :: c)) : (\<forall> a_m2a \<in> ((a_msgshash_primea :: c)) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a)))))))))))"
assumes v'192: "((\<And> v :: c. v \<in> (Values) \<Longrightarrow> (((TrySend ((((''type'' :> (''Offer'')) @@ (''val'' :> (v)) @@ (''round'' :> ((0))) @@ (''primed'' :> (FALSE))))))) \<Longrightarrow> (\<forall> a_m1a \<in> ((a_msgshash_primea :: c)) : (\<forall> a_m2a \<in> ((a_msgshash_primea :: c)) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a))))))))))"
shows "(\<forall> a_m1a \<in> ((a_msgshash_primea :: c)) : (\<forall> a_m2a \<in> ((a_msgshash_primea :: c)) : (((((((((((((fapply ((a_m1a), (''type''))) = (''Answer''))) \<and> (((fapply ((a_m2a), (''type''))) = (''Answer''))))) \<and> (((fapply ((a_m1a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m2a), (''cons''))) = (a_ca))))) \<and> (((fapply ((a_m1a), (''lastRound''))) = (fapply ((a_m2a), (''lastRound''))))))) \<Rightarrow> (((a_m1a) = (a_m2a)))))))"(is "PROP ?ob'927")
proof -
ML_command {* writeln "*** TLAPS ENTER 927"; *}
show "PROP ?ob'927"

(* BEGIN ZENON INPUT
;; file=SpireTlaps.tlaps/tlapm_29db80.znn; PATH='/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/lib/tlaps/bin'; zenon -p0 -x tla -oisar -max-time 1d "$file" >SpireTlaps.tlaps/tlapm_29db80.znn.out
;; obligation #927
$hyp "v'162" (/\ (TLA.in msgs (TLA.SUBSET Messages)) MsgInv (TLA.in lastVal
(TLA.FuncSet Consenters (TLA.cup Values (TLA.set None)))) (TLA.in lastRound
(TLA.FuncSet Consenters (TLA.cup Rounds
(TLA.set (arith.minus (TLA.fapply TLA.Succ 0)))))) (TLA.in lastPrimed
(TLA.FuncSet Consenters (TLA.set T. F.)))
(TLA.bAll Consenters ((a_ca) (/\ (<=> (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))) (= (TLA.fapply lastVal a_ca) None))
(=> (= (TLA.fapply lastRound a_ca) (arith.minus (TLA.fapply TLA.Succ 0)))
(-. (TLA.fapply lastPrimed a_ca))) (=> (-. (= (TLA.fapply lastRound a_ca)
(arith.minus (TLA.fapply TLA.Succ 0))))
(TLA.bEx msgs ((m) (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca) (= (TLA.fapply m "lastRound")
(TLA.fapply lastRound a_ca)) (= (TLA.fapply m "lastVal")
(TLA.fapply lastVal a_ca)) (= (TLA.fapply m "lastPrimed")
(TLA.fapply lastPrimed a_ca))))))
(-. (TLA.bEx msgs ((m) (/\ (/\ (= (TLA.fapply m "type") "Answer")
(= (TLA.fapply m "cons") a_ca)) (arith.lt (TLA.fapply lastRound a_ca)
(TLA.fapply m "lastRound"))))))
(TLA.bAll msgs ((a_m1a) (TLA.bAll msgs ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a))))))))))
$hyp "v'163" (\/ (/\ (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)))))))))
(TLA.bEx Values ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)))))
(/\ (= a_lastRoundhash_primea lastRound) (= a_lastValhash_primea lastVal)
(= a_lastPrimedhash_primea lastPrimed)))
(TLA.bEx Consenters ((a_ca) (Answer a_ca))) Decided
Terminated)
$hyp "a_ca_in" (TLA.in a_ca Consenters)
$hyp "v'187" (\/ (TLA.bEx Quorums ((Q) (TLA.bEx (QuorumAnswers Q) ((A) (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.)))))))))
(TLA.bEx Values ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)))))
$hyp "v'188" (= a_lastRoundhash_primea
lastRound)
$hyp "v'189" (= a_lastValhash_primea
lastVal)
$hyp "v'190" (= a_lastPrimedhash_primea
lastPrimed)
$hyp "v'191" (TLA.bAll Quorums ((Q) (TLA.bAll (QuorumAnswers Q) ((A) (=> (TLA.cond (AllIdenticalRounds A) (TLA.cond (AllPrimed A) F. (TLA.cond (AllIdenticalValues A) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TrySend (TLA.record "type" "Offer" "val" (PickValue A) "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" T.))) (/\ (TLA.in (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) Rounds)
(TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (arith.add (PickRound A)
(TLA.fapply TLA.Succ 0)) "primed" F.))))))) (TLA.bEx (SuccessorValues A) ((v) (TrySend (TLA.record "type" "Offer" "val" v "round" (MaxLastRound A) "primed" F.))))) (TLA.bAll a_msgshash_primea ((a_m1a) (TLA.bAll a_msgshash_primea ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a)))))))))))
$hyp "v'192" (TLA.bAll Values ((v) (=> (TrySend (TLA.record "type" "Offer" "val" v "round" 0 "primed" F.)) (TLA.bAll a_msgshash_primea ((a_m1a) (TLA.bAll a_msgshash_primea ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a)))))))))
$goal (TLA.bAll a_msgshash_primea ((a_m1a) (TLA.bAll a_msgshash_primea ((a_m2a) (=> (/\ (/\ (/\ (/\ (= (TLA.fapply a_m1a "type")
"Answer") (= (TLA.fapply a_m2a "type") "Answer"))
(= (TLA.fapply a_m1a "cons") a_ca)) (= (TLA.fapply a_m2a "cons") a_ca))
(= (TLA.fapply a_m1a "lastRound") (TLA.fapply a_m2a "lastRound"))) (= a_m1a
a_m2a))))))
END ZENON  INPUT *)
(* PROOF-FOUND *)
(* BEGIN-PROOF *)
proof (rule zenon_nnpp)
 have z_Hh:"bAll(Quorums, (\<lambda>Q. bAll(QuorumAnswers(Q), (\<lambda>A. (cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))=>bAll(a_msgshash_primea, (\<lambda>a_m1a. bAll(a_msgshash_primea, (\<lambda>a_m2a. (((((((a_m1a[''type''])=''Answer'')&((a_m2a[''type''])=''Answer''))&((a_m1a[''cons''])=a_ca))&((a_m2a[''cons''])=a_ca))&((a_m1a[''lastRound''])=(a_m2a[''lastRound''])))=>(a_m1a=a_m2a)))))))))))" (is "?z_hh")
 using v'191 by blast
 have z_Hd:"(bEx(Quorums, (\<lambda>Q. bEx(QuorumAnswers(Q), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))|bEx(Values, (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "?z_hdc|?z_hdg")
 using v'187 by blast
 have z_Hi:"bAll(Values, (\<lambda>v. (TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))=>bAll(a_msgshash_primea, (\<lambda>a_m1a. bAll(a_msgshash_primea, (\<lambda>a_m2a. (((((((a_m1a[''type''])=''Answer'')&((a_m2a[''type''])=''Answer''))&((a_m1a[''cons''])=a_ca))&((a_m2a[''cons''])=a_ca))&((a_m1a[''lastRound''])=(a_m2a[''lastRound''])))=>(a_m1a=a_m2a)))))))))" (is "?z_hi")
 using v'192 by blast
 assume z_Hj:"(~bAll(a_msgshash_primea, (\<lambda>a_m1a. bAll(a_msgshash_primea, (\<lambda>a_m2a. (((((((a_m1a[''type''])=''Answer'')&((a_m2a[''type''])=''Answer''))&((a_m1a[''cons''])=a_ca))&((a_m2a[''cons''])=a_ca))&((a_m1a[''lastRound''])=(a_m2a[''lastRound''])))=>(a_m1a=a_m2a)))))))" (is "~?z_hca")
 have z_Hdo_z_Hh: "(\\A x:((x \\in Quorums)=>bAll(QuorumAnswers(x), (\<lambda>A. (cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))=>?z_hca))))) == ?z_hh" (is "?z_hdo == _")
 by (unfold bAll_def)
 have z_Hdo: "?z_hdo" (is "\\A x : ?z_hdu(x)")
 by (unfold z_Hdo_z_Hh, fact z_Hh)
 have z_Hdv_z_Hi: "(\\A x:((x \\in Values)=>(TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))=>?z_hca))) == ?z_hi" (is "?z_hdv == _")
 by (unfold bAll_def)
 have z_Hdv: "?z_hdv" (is "\\A x : ?z_heb(x)")
 by (unfold z_Hdv_z_Hi, fact z_Hi)
 show FALSE
 proof (rule zenon_or [OF z_Hd])
  assume z_Hdc:"?z_hdc"
  have z_Hec_z_Hdc: "(\\E x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))) == ?z_hdc" (is "?z_hec == _")
  by (unfold bEx_def)
  have z_Hec: "?z_hec" (is "\\E x : ?z_hef(x)")
  by (unfold z_Hec_z_Hdc, fact z_Hdc)
  have z_Heg: "?z_hef((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))))" (is "?z_hei&?z_hej")
  by (rule zenon_ex_choose_0 [of "?z_hef", OF z_Hec])
  have z_Hei: "?z_hei"
  by (rule zenon_and_0 [OF z_Heg])
  have z_Hej: "?z_hej"
  by (rule zenon_and_1 [OF z_Heg])
  have z_Hek_z_Hej: "(\\E x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))) == ?z_hej" (is "?z_hek == _")
  by (unfold bEx_def)
  have z_Hek: "?z_hek" (is "\\E x : ?z_hfm(x)")
  by (unfold z_Hek_z_Hej, fact z_Hej)
  have z_Hfn: "?z_hfm((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))))" (is "?z_hfp&?z_hfq")
  by (rule zenon_ex_choose_0 [of "?z_hfm", OF z_Hek])
  have z_Hfp: "?z_hfp"
  by (rule zenon_and_0 [OF z_Hfn])
  have z_Hfq: "?z_hfq"
  by (rule zenon_and_1 [OF z_Hfn])
  have z_Hfr: "?z_hdu((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE)))))))))))" (is "_=>?z_hfs")
  by (rule zenon_all_0 [of "?z_hdu" "(CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))", OF z_Hdo])
  show FALSE
  proof (rule zenon_imply [OF z_Hfr])
   assume z_Hft:"(~?z_hei)"
   show FALSE
   by (rule notE [OF z_Hft z_Hei])
  next
   assume z_Hfs:"?z_hfs"
   have z_Hfu_z_Hfs: "(\\A x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))=>(cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))))))=>?z_hca))) == ?z_hfs" (is "?z_hfu == _")
   by (unfold bAll_def)
   have z_Hfu: "?z_hfu" (is "\\A x : ?z_hfx(x)")
   by (unfold z_Hfu_z_Hfs, fact z_Hfs)
   have z_Hfy: "?z_hfx((CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE)))))))))" (is "_=>?z_hfz")
   by (rule zenon_all_0 [of "?z_hfx" "(CHOOSE x:((x \\in QuorumAnswers((CHOOSE x:((x \\in Quorums)&bEx(QuorumAnswers(x), (\<lambda>A. cond(AllIdenticalRounds(A), cond(AllPrimed(A), FALSE, cond(AllIdenticalValues(A), (((PickRound(A) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(A)) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(A) + 1) \\in Rounds)&bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(A) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(A), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(A)) @@ ''primed'' :> (FALSE))))))))))))&cond(AllIdenticalRounds(x), cond(AllPrimed(x), FALSE, cond(AllIdenticalValues(x), (((PickRound(x) + 1) \\in Rounds)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (PickValue(x)) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (TRUE)))), (((PickRound(x) + 1) \\in Rounds)&bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> ((PickRound(x) + 1)) @@ ''primed'' :> (FALSE)))))))), bEx(SuccessorValues(x), (\<lambda>v. TrySend((''type'' :> (''Offer'') @@ ''val'' :> (v) @@ ''round'' :> (MaxLastRound(x)) @@ ''primed'' :> (FALSE))))))))", OF z_Hfu])
   show FALSE
   proof (rule zenon_imply [OF z_Hfy])
    assume z_Hga:"(~?z_hfp)"
    show FALSE
    by (rule notE [OF z_Hga z_Hfp])
   next
    assume z_Hfz:"?z_hfz"
    show FALSE
    proof (rule zenon_imply [OF z_Hfz])
     assume z_Hgb:"(~?z_hfq)"
     show FALSE
     by (rule notE [OF z_Hgb z_Hfq])
    next
     assume z_Hca:"?z_hca"
     show FALSE
     by (rule notE [OF z_Hj z_Hca])
    qed
   qed
  qed
 next
  assume z_Hdg:"?z_hdg"
  have z_Hgc_z_Hdg: "(\\E x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))) == ?z_hdg" (is "?z_hgc == _")
  by (unfold bEx_def)
  have z_Hgc: "?z_hgc" (is "\\E x : ?z_hge(x)")
  by (unfold z_Hgc_z_Hdg, fact z_Hdg)
  have z_Hgf: "?z_hge((CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "?z_hgh&?z_hgi")
  by (rule zenon_ex_choose_0 [of "?z_hge", OF z_Hgc])
  have z_Hgh: "?z_hgh"
  by (rule zenon_and_0 [OF z_Hgf])
  have z_Hgi: "?z_hgi"
  by (rule zenon_and_1 [OF z_Hgf])
  have z_Hgj: "?z_heb((CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE))))))" (is "_=>?z_hgk")
  by (rule zenon_all_0 [of "?z_heb" "(CHOOSE x:((x \\in Values)&TrySend((''type'' :> (''Offer'') @@ ''val'' :> (x) @@ ''round'' :> (0) @@ ''primed'' :> (FALSE)))))", OF z_Hdv])
  show FALSE
  proof (rule zenon_imply [OF z_Hgj])
   assume z_Hgl:"(~?z_hgh)"
   show FALSE
   by (rule notE [OF z_Hgl z_Hgh])
  next
   assume z_Hgk:"?z_hgk"
   show FALSE
   proof (rule zenon_imply [OF z_Hgk])
    assume z_Hgm:"(~?z_hgi)"
    show FALSE
    by (rule notE [OF z_Hgm z_Hgi])
   next
    assume z_Hca:"?z_hca"
    show FALSE
    by (rule notE [OF z_Hj z_Hca])
   qed
  qed
 qed
qed
(* END-PROOF *)
ML_command {* writeln "*** TLAPS EXIT 927"; *} qed
end
